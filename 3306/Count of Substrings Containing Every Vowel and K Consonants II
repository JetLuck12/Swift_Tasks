func isVowel(_ ch : Character) -> Bool{
    for i in "aeiou"{
        if ch == i{
            return true
        }
    }
    return false
}

class Solution {
    func countOfSubstrings(_ word: String, _ k: Int) -> Int {
        var arr = Array(word)
        var res = 0
        var start = 0
        var end = 0
        var map : [Character : Int] = [:]
        var cons = 0
        var next_cons : [Int] = Array(repeating : -1, count : arr.count)

        var nextConsInd = arr.count
        var i = arr.count - 1
        while (i >= 0){
            next_cons[i] = nextConsInd
            if (!isVowel(arr[i])){
                nextConsInd = i
            }
            i -= 1
        }
        while (end < arr.count){
            var newLetter = arr[end]
            if (isVowel(newLetter)){
                if map[newLetter] != nil{
                    map[newLetter]! += 1
                }else{
                    map[newLetter] = 1
                }
                
            }else{
                cons += 1
            }
            while (cons > k){
                var startLetter = arr[start]
                if (isVowel(startLetter)){
                    map[startLetter]! -= 1
                    if (map[startLetter]! == 0){
                        map[startLetter] = nil
                    }
                }else{
                    cons -= 1
                }
                start += 1
            }
            while (cons == k && map.count == 5){
                res += next_cons[end] - end 
                var startLetter = arr[start]
                if (isVowel(startLetter)){
                    map[startLetter]! -= 1
                    if (map[startLetter]! == 0){
                        map[startLetter] = nil
                    }
                }else{a
                    cons -= 1
                }
                start += 1
            }
            end += 1
        }
        return res
    }
}
